% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/afni_3dclusterize.R
\name{afni_3dclusterize}
\alias{afni_3dclusterize}
\title{wrapper class for 3dClusterize}
\description{
wrapper class for 3dClusterize

wrapper class for 3dClusterize
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{fwe_p}}{a vector of p-values used for familywise error (FWE) z-statistic threshold calculations in pTFCE.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{fwe_p}}{a vector of p-values used for familywise error (FWE) z-statistic threshold calculations in pTFCE.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{afni_3dclusterize$new()}}
\item \href{#method-run}{\code{afni_3dclusterize$run()}}
\item \href{#method-get_clust_df}{\code{afni_3dclusterize$get_clust_df()}}
\item \href{#method-get_cluster_map_nifti}{\code{afni_3dclusterize$get_cluster_map_nifti()}}
\item \href{#method-get_call}{\code{afni_3dclusterize$get_call()}}
\item \href{#method-get_output_files}{\code{afni_3dclusterize$get_output_files()}}
\item \href{#method-get_orient}{\code{afni_3dclusterize$get_orient()}}
\item \href{#method-add_whereami}{\code{afni_3dclusterize$add_whereami()}}
\item \href{#method-is_complete}{\code{afni_3dclusterize$is_complete()}}
\item \href{#method-generate_subclusters}{\code{afni_3dclusterize$generate_subclusters()}}
\item \href{#method-run_subclustering}{\code{afni_3dclusterize$run_subclustering()}}
\item \href{#method-has_clusters}{\code{afni_3dclusterize$has_clusters()}}
\item \href{#method-reset_cache}{\code{afni_3dclusterize$reset_cache()}}
\item \href{#method-get_subclust_list}{\code{afni_3dclusterize$get_subclust_list()}}
\item \href{#method-clone}{\code{afni_3dclusterize$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
passthrough access to whereami object if that has been setup


initialization function for a new afni_3dclusterize object. Arguments largely mirror the 3dClusterize parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$new(
  inset = NULL,
  mask = NULL,
  threshold_file = NULL,
  data_file = NULL,
  mask_from_hdr = NULL,
  out_mask = NULL,
  ithr = NULL,
  idat = NULL,
  onesided = NULL,
  twosided = NULL,
  bisided = NULL,
  lower_thresh = NULL,
  upper_thresh = NULL,
  one_thresh = NULL,
  one_tail = NULL,
  NN = NULL,
  clust_nvox = NULL,
  clust_vol = NULL,
  pref_map = NULL,
  pref_dat = NULL,
  quiet = NULL,
  orient = NULL,
  binary = NULL,
  clusterize_output_file = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inset}}{A 4D dataset containing the statistic to use for thresholding (ithr) and, optionally, the data value to output/retain}

\item{\code{mask}}{If specified, the volume will be masked by \code{mask} prior to clusterizing}

\item{\code{threshold_file}}{A 3D dataset containing the statistic to use for thresholding. Mutually exclusive with \code{inset}
If passed, \code{ithr} and \code{idat} are ignored because the \code{inset} file is generated internally.}

\item{\code{data_file}}{A 3D dataset containing the data value to be retained in clusters post-thresholding.
Must be passed with \code{threshold_file} and will be stitched together with it internally. Mutually exclusive with \code{inset}.}

\item{\code{mask_from_hdr}}{passes through as -mask_from_hdr}

\item{\code{out_mask}}{passes through as -out_mask}

\item{\code{ithr}}{sub-brik number for the voxelwise threshold. Passes through as -ithr}

\item{\code{idat}}{sub-brik number for the voxelwise data to be output in cluster table. Passes through as -idat}

\item{\code{onesided}}{if TRUE, clusterizing will be conducted on one tail of the statistic distribution (-ithr)}

\item{\code{twosided}}{if TRUE, clusterizing will be conducted on both tails of the statistic distribution (-ithr)}

\item{\code{bisided}}{if TRUE, clusterizing will be conducted on each tail of the distribution individually}

\item{\code{lower_thresh}}{the lower tail cutoff for two/bi-sided testing}

\item{\code{upper_thresh}}{the upper tail cutoff for two/bi-sided testing}

\item{\code{one_thresh}}{The threshold value for one-sided testing}

\item{\code{NN}}{1, 2, 3. Default: 1. Passes through as -NN.}

\item{\code{clust_nvox}}{The minimum number of voxels allowed in a cluster. Passes through as -clust_nvol}

\item{\code{clust_vol}}{The minimum volume in (microliters) allowed in a cluster (mutually exclusive with clust_nvox). 
Passes through as -clust_vol}

\item{\code{pref_map}}{File name for the integer-valued mask containing each cluster, ordered by descending voxel size.
Passes through as -pref_map.}

\item{\code{pref_dat}}{File name for the clusterized and thresholded data. Passes through as -pref_dat.}

\item{\code{quiet}}{passes through as -quiet.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\if{latex}{\out{\hypertarget{method-run}{}}}
\subsection{Method \code{run()}}{
run the 3dClusterize command relevant to this object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$run(force = FALSE, quiet = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{force}}{if TRUE, 3dClusterize will be re-run}

\item{\code{quiet}}{if TRUE, don't output messages as object is run or checked}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_clust_df"></a>}}
\if{latex}{\out{\hypertarget{method-get_clust_df}{}}}
\subsection{Method \code{get_clust_df()}}{
return the 3dClusterize table of clusters as a data.frame
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_clust_df(
  include_whereami = TRUE,
  include_subclusters = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_whereami}}{If TRUE and if $add_whereami() is already complete, merge the whereami data
into the cluster data.frame that is returned by this function.}

\item{\code{include_subclusters}}{If TRUE and if $generate_subclusters() is already complete, merge the subcluster
data into the cluster data.frame that is returned by this function.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This function will return an empty data.frame if the 3dClusterize output file cannot be found.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_cluster_map_nifti"></a>}}
\if{latex}{\out{\hypertarget{method-get_cluster_map_nifti}{}}}
\subsection{Method \code{get_cluster_map_nifti()}}{
method to read and return the integer-valued clusterized mask (aka -pref_map) as an oro.nifti object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_cluster_map_nifti()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an oro.nifti object containing the clusterized mask from 3dClusterize
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_call}{}}}
\subsection{Method \code{get_call()}}{
returns the 3dClusterize call for this specification
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_call()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_output_files"></a>}}
\if{latex}{\out{\hypertarget{method-get_output_files}{}}}
\subsection{Method \code{get_output_files()}}{
Provides a vector of expected output files that correspond to this 3dClusterize setup
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_output_files(exclude_missing = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{exclude_missing}}{if TRUE (default), any output file that cannot be found will be returned as NA.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a named vector of output files related to this 3dClusterize setup
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_orient"></a>}}
\if{latex}{\out{\hypertarget{method-get_orient}{}}}
\subsection{Method \code{get_orient()}}{
returns the orientation code for this 3dClusterize call (LPI or RAI)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_orient()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_whereami"></a>}}
\if{latex}{\out{\hypertarget{method-add_whereami}{}}}
\subsection{Method \code{add_whereami()}}{
Add's an afni_whereami object to this class in the $whereami slot. The corresponding
  whereami command is also run when this is added so that coordinates and labels can be obtained
  immediately. To access the whereami object and its methods, use $whereami()
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$add_whereami(atlases = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{atlases}}{An optional character vector of atlases to be requested in whereami.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_complete"></a>}}
\if{latex}{\out{\hypertarget{method-is_complete}{}}}
\subsection{Method \code{is_complete()}}{
returns TRUE if all expected output files exist for this 3dClusterize call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$is_complete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-generate_subclusters"></a>}}
\if{latex}{\out{\hypertarget{method-generate_subclusters}{}}}
\subsection{Method \code{generate_subclusters()}}{
break up large clusters into subclusters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$generate_subclusters(
  break_nvox = 400,
  min_subclust_nvox = 25,
  max_subclust_nvox = NULL,
  min_n_subclust = 2,
  max_n_subclust = NULL,
  step_size = 0.1,
  add_whereami = TRUE,
  whereami_atlases = NULL,
  print_progress = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{break_nvox}}{Break up any clusters larger than this value into subclusters. Default: 400}

\item{\code{min_subclust_nvox}}{The smallest number of voxels allowed in a subcluster. Default: 25.}

\item{\code{max_subclust_nvox}}{The largest numver of voxels allowed in a subcluster. If NULL, no upper limit is set.}

\item{\code{min_n_subclust}}{The smallest number of subclusters that will be allowed. Must be 2 or greater. Default: 2}

\item{\code{max_n_subclust}}{The maximum number of subclusters that will be allowed. If NULL, no upper limit is set.}

\item{\code{step_size}}{The step size used to change the threshold values in the test statistic map being clusterized. Default: 0.1.}

\item{\code{add_whereami}}{If TRUE, whereami will be run for each subcluster. Default: TRUE}

\item{\code{whereami_atlases}}{Passes through to afni_whereami for specifying which atlases to use in lookup}

\item{\code{print_progress}}{If TRUE, the user will see the thresholds being used to subcluster each region.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run_subclustering"></a>}}
\if{latex}{\out{\hypertarget{method-run_subclustering}{}}}
\subsection{Method \code{run_subclustering()}}{
runs a subclustering algorithm on this object, increasing the thresholds until the desired constraints are satisfied
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$run_subclustering(
  min_clust = NULL,
  max_clust = NULL,
  min_nvox = NULL,
  max_nvox = NULL,
  step_size = NULL,
  refine_steps = 5,
  max_iter = 50,
  print_progress = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{min_clust}}{The minimum number of clusters that will be accepted}

\item{\code{max_clust}}{The maximum number of clusters that will be accepted}

\item{\code{refine_steps}}{The number of steps backward from a winning solution. This maximizes the subcluster sizes.}

\item{\code{max_iter}}{The maximum number of increment steps that will be taken before giving up}

\item{\code{print_progress}}{If TRUE, the user will see the thresholds being used to subcluster each region.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
this is intended to be used internally
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-has_clusters"></a>}}
\if{latex}{\out{\hypertarget{method-has_clusters}{}}}
\subsection{Method \code{has_clusters()}}{
check whether clusteres were found
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$has_clusters()}\if{html}{\out{</div>}}
}

\subsection{Details}{
returns TRUE if clusters were found, FALSE if they were not found, and NULL if the expected cluster
  output file does not exist (e.g., if 3dClusterize has not been run yet)
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-reset_cache"></a>}}
\if{latex}{\out{\hypertarget{method-reset_cache}{}}}
\subsection{Method \code{reset_cache()}}{
not intended to be called by user, this resets the cluster data.frame and whereami objects to NULL
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$reset_cache()}\if{html}{\out{</div>}}
}

\subsection{Details}{
this is used internally when cloning the parent clusterize object for subclustering
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_subclust_list"></a>}}
\if{latex}{\out{\hypertarget{method-get_subclust_list}{}}}
\subsection{Method \code{get_subclust_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_subclust_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
