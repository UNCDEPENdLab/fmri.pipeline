% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/afni_3dclusterize.R
\name{afni_3dclusterize}
\alias{afni_3dclusterize}
\title{wrapper class for 3dClusterize}
\description{
wrapper class for 3dClusterize

wrapper class for 3dClusterize
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{fwe_p}}{a vector of p-values used for familywise error (FWE) z-statistic threshold calculations in pTFCE.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{fwe_p}}{a vector of p-values used for familywise error (FWE) z-statistic threshold calculations in pTFCE.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{afni_3dclusterize$new()}}
\item \href{#method-run}{\code{afni_3dclusterize$run()}}
\item \href{#method-get_clust_df}{\code{afni_3dclusterize$get_clust_df()}}
\item \href{#method-get_cluster_map_nifti}{\code{afni_3dclusterize$get_cluster_map_nifti()}}
\item \href{#method-get_call}{\code{afni_3dclusterize$get_call()}}
\item \href{#method-get_output_files}{\code{afni_3dclusterize$get_output_files()}}
\item \href{#method-get_orient}{\code{afni_3dclusterize$get_orient()}}
\item \href{#method-add_whereami}{\code{afni_3dclusterize$add_whereami()}}
\item \href{#method-is_complete}{\code{afni_3dclusterize$is_complete()}}
\item \href{#method-whereami}{\code{afni_3dclusterize$whereami()}}
\item \href{#method-clone}{\code{afni_3dclusterize$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
initialization function for a new afni_3dclusterize object. Arguments largely mirror the 3dClusterize parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$new(
  inset = NULL,
  mask = NULL,
  threshold_file = NULL,
  data_file = NULL,
  mask_from_hdr = NULL,
  out_mask = NULL,
  ithr = NULL,
  idat = NULL,
  onesided = NULL,
  twosided = NULL,
  bisided = NULL,
  lower_thresh = NULL,
  upper_thresh = NULL,
  one_thresh = NULL,
  one_tail = NULL,
  NN = NULL,
  clust_nvox = NULL,
  clust_nvol = NULL,
  pref_map = NULL,
  pref_dat = NULL,
  quiet = NULL,
  orient = NULL,
  binary = NULL,
  clusterize_output_file = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inset}}{A 4D dataset containing the statistic to use for thresholding (ithr) and, optionally, the data value to output/retain}

\item{\code{mask}}{If specified, the volume will be masked by \code{mask} prior to clusterizing}

\item{\code{threshold_file}}{A 3D dataset containing the statistic to use for thresholding. Mutually exclusive with \code{inset}
If passed, \code{ithr} and \code{idat} are ignored because the \code{inset} file is generated internally.}

\item{\code{data_file}}{A 3D dataset containing the data value to be retained in clusters post-thresholding. 
Must be passed with \code{threshold_file} and will be stitched together with it internally. Mutually exclusive with \code{inset}.}

\item{\code{mask_from_hdr}}{passes through as -mask_from_hdr}

\item{\code{out_mask}}{passes through as -out_mask}

\item{\code{ithr}}{sub-brik number for the voxelwise threshold. Passes through as -ithr}

\item{\code{onesided}}{if TRUE, clusterizing will be conducted on one tail of the statistic distribution (-ithr)}

\item{\code{twosided}}{if TRUE, clusterizing will be conducted on both tails of the statistic distribution (-ithr)}

\item{\code{NN}}{1, 2, 3. Default: 1. Passes through as -NN.}

\item{\code{pref_map}}{File name for the integer-valued mask containing each cluster, ordered by descending voxel size. 
Passes through as -pref_map.}

\item{\code{quiet}}{passes through as -quiet.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\if{latex}{\out{\hypertarget{method-run}{}}}
\subsection{Method \code{run()}}{
run the 3dClusterize command relevant to this object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$run(force = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{force}}{if TRUE, 3dClusterize will be re-run}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_clust_df"></a>}}
\if{latex}{\out{\hypertarget{method-get_clust_df}{}}}
\subsection{Method \code{get_clust_df()}}{
return the 3dClusterize table of clusters as a data.frame
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_clust_df()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This function will return an empty data.frame if the 3dClusterize output file cannot be found.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_cluster_map_nifti"></a>}}
\if{latex}{\out{\hypertarget{method-get_cluster_map_nifti}{}}}
\subsection{Method \code{get_cluster_map_nifti()}}{
method to read and return the integer-valued clusterized mask (aka -pref_map) as an oro.nifti object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_cluster_map_nifti()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
an oro.nifti object containing the clusterized mask from 3dClusterize
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_call}{}}}
\subsection{Method \code{get_call()}}{
returns the 3dClusterize call for this specification
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_call()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_output_files"></a>}}
\if{latex}{\out{\hypertarget{method-get_output_files}{}}}
\subsection{Method \code{get_output_files()}}{
Provides a vector of expected output files that correspond to this 3dClusterize setup
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_output_files(exclude_missing = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{exclude_missing}}{if TRUE (default), any output file that cannot be found will be returned as NA.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a named vector of output files related to this 3dClusterize setup
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_orient"></a>}}
\if{latex}{\out{\hypertarget{method-get_orient}{}}}
\subsection{Method \code{get_orient()}}{
returns the orientation code for this 3dClusterize call (LPI or RAI)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$get_orient()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_whereami"></a>}}
\if{latex}{\out{\hypertarget{method-add_whereami}{}}}
\subsection{Method \code{add_whereami()}}{
Add's an afni_whereami object to this class in the $whereami slot. The corresponding
  whereami command is also run when this is added so that coordinates and labels can be obtained
  immediately. To access the whereami object and its methods, use $whereami()
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$add_whereami()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_complete"></a>}}
\if{latex}{\out{\hypertarget{method-is_complete}{}}}
\subsection{Method \code{is_complete()}}{
returns TRUE if all expected output files exist for this 3dClusterize call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$is_complete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-whereami"></a>}}
\if{latex}{\out{\hypertarget{method-whereami}{}}}
\subsection{Method \code{whereami()}}{
passthrough access to whereami object if that has been
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$whereami()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{afni_3dclusterize$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
